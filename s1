
submit:     file format elf32-i386

Disassembly of section .init:

080488f4 <_init>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8048bc4 <call_gmon_start>
call   8048c60 <frame_dummy>
call   8049d60 <__do_global_ctors_aux>
leave  
ret    
Disassembly of section .plt:

0804890c <regexec@plt-0x10>:
pushl  0x804b51c
jmp    *0x804b520
add    %al,(%eax)
	...

0804891c <regexec@plt>:
jmp    *0x804b524
push   $0x0
jmp    804890c <_init+0x18>

0804892c <fgetc@plt>:
jmp    *0x804b528
push   $0x8
jmp    804890c <_init+0x18>

0804893c <__register_frame_info@plt>:
jmp    *0x804b52c
push   $0x10
jmp    804890c <_init+0x18>

0804894c <localtime@plt>:
jmp    *0x804b530
push   $0x18
jmp    804890c <_init+0x18>

0804895c <fprintf@plt>:
jmp    *0x804b534
push   $0x20
jmp    804890c <_init+0x18>

0804896c <fork@plt>:
jmp    *0x804b538
push   $0x28
jmp    804890c <_init+0x18>

0804897c <getenv@plt>:
jmp    *0x804b53c
push   $0x30
jmp    804890c <_init+0x18>

0804898c <unlink@plt>:
jmp    *0x804b540
push   $0x38
jmp    804890c <_init+0x18>

0804899c <getpwuid@plt>:
jmp    *0x804b544
push   $0x40
jmp    804890c <_init+0x18>

080489ac <creat@plt>:
jmp    *0x804b548
push   $0x48
jmp    804890c <_init+0x18>

080489bc <__errno_location@plt>:
jmp    *0x804b54c
push   $0x50
jmp    804890c <_init+0x18>

080489cc <malloc@plt>:
jmp    *0x804b550
push   $0x58
jmp    804890c <_init+0x18>

080489dc <index@plt>:
jmp    *0x804b554
push   $0x60
jmp    804890c <_init+0x18>

080489ec <__deregister_frame_info@plt>:
jmp    *0x804b558
push   $0x68
jmp    804890c <_init+0x18>

080489fc <__xstat@plt>:
jmp    *0x804b55c
push   $0x70
jmp    804890c <_init+0x18>

08048a0c <waitpid@plt>:
jmp    *0x804b560
push   $0x78
jmp    804890c <_init+0x18>

08048a1c <time@plt>:
jmp    *0x804b564
push   $0x80
jmp    804890c <_init+0x18>

08048a2c <fputs@plt>:
jmp    *0x804b568
push   $0x88
jmp    804890c <_init+0x18>

08048a3c <strlen@plt>:
jmp    *0x804b56c
push   $0x90
jmp    804890c <_init+0x18>

08048a4c <execvp@plt>:
jmp    *0x804b570
push   $0x98
jmp    804890c <_init+0x18>

08048a5c <strncmp@plt>:
jmp    *0x804b574
push   $0xa0
jmp    804890c <_init+0x18>

08048a6c <fputc@plt>:
jmp    *0x804b578
push   $0xa8
jmp    804890c <_init+0x18>

08048a7c <__libc_start_main@plt>:
jmp    *0x804b57c
push   $0xb0
jmp    804890c <_init+0x18>

08048a8c <strcat@plt>:
jmp    *0x804b580
push   $0xb8
jmp    804890c <_init+0x18>

08048a9c <printf@plt>:
jmp    *0x804b584
push   $0xc0
jmp    804890c <_init+0x18>

08048aac <getuid@plt>:
jmp    *0x804b588
push   $0xc8
jmp    804890c <_init+0x18>

08048abc <fclose@plt>:
jmp    *0x804b58c
push   $0xd0
jmp    804890c <_init+0x18>

08048acc <getopt_long@plt>:
jmp    *0x804b590
push   $0xd8
jmp    804890c <_init+0x18>

08048adc <getgid@plt>:
jmp    *0x804b594
push   $0xe0
jmp    804890c <_init+0x18>

08048aec <regcomp@plt>:
jmp    *0x804b598
push   $0xe8
jmp    804890c <_init+0x18>

08048afc <free@plt>:
jmp    *0x804b59c
push   $0xf0
jmp    804890c <_init+0x18>

08048b0c <memset@plt>:
jmp    *0x804b5a0
push   $0xf8
jmp    804890c <_init+0x18>

08048b1c <rindex@plt>:
jmp    *0x804b5a4
push   $0x100
jmp    804890c <_init+0x18>

08048b2c <strncpy@plt>:
jmp    *0x804b5a8
push   $0x108
jmp    804890c <_init+0x18>

08048b3c <fopen@plt>:
jmp    *0x804b5ac
push   $0x110
jmp    804890c <_init+0x18>

08048b4c <sprintf@plt>:
jmp    *0x804b5b0
push   $0x118
jmp    804890c <_init+0x18>

08048b5c <fchown@plt>:
jmp    *0x804b5b4
push   $0x120
jmp    804890c <_init+0x18>

08048b6c <realpath@plt>:
jmp    *0x804b5b8
push   $0x128
jmp    804890c <_init+0x18>

08048b7c <__gmon_start__@plt>:
jmp    *0x804b5bc
push   $0x130
jmp    804890c <_init+0x18>

08048b8c <strcpy@plt>:
jmp    *0x804b5c0
push   $0x138
jmp    804890c <_init+0x18>
Disassembly of section .text:

08048ba0 <_start>:
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8049c70
push   $0x8049cc0
push   %ecx
push   %esi
push   $0x8049940
call   8048a7c <__libc_start_main@plt>
hlt    
nop    
nop    

08048bc4 <call_gmon_start>:
push   %ebp
mov    %esp,%ebp
push   %ebx
sub    $0x4,%esp
call   8048bd0 <call_gmon_start+0xc>
pop    %ebx
add    $0x2948,%ebx
mov    0xfffffffc(%ebx),%edx
test   %edx,%edx
je     8048be6 <call_gmon_start+0x22>
call   8048b7c <__gmon_start__@plt>
pop    %eax
pop    %ebx
leave  
ret    
nop    
nop    
nop    
nop    
nop    
nop    

08048bf0 <__do_global_dtors_aux>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
cmpl   $0x0,0x804b5d0
jne    8048c3d <__do_global_dtors_aux+0x4d>
jmp    8048c13 <__do_global_dtors_aux+0x23>
mov    0x804b5cc,%eax
lea    0x4(%eax),%edx
mov    %edx,0x804b5cc
mov    (%eax),%eax
call   *%eax
mov    0x804b5cc,%eax
cmpl   $0x0,(%eax)
jne    8048c01 <__do_global_dtors_aux+0x11>
mov    $0x80489ec,%eax
test   %eax,%eax
je     8048c33 <__do_global_dtors_aux+0x43>
add    $0xfffffff4,%esp
push   $0x804b248
call   80489ec <__deregister_frame_info@plt>
movl   $0x1,0x804b5d0
mov    %ebp,%esp
pop    %ebp
ret    
jmp    8048c50 <fini_dummy>
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    

08048c50 <fini_dummy>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi

08048c60 <frame_dummy>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
mov    $0x804893c,%eax
test   %eax,%eax
je     8048c81 <frame_dummy+0x21>
add    $0xfffffff8,%esp
push   $0x804b5dc
push   $0x804b248
call   804893c <__register_frame_info@plt>
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi

08048c90 <init_dummy>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
mov    %ebp,%esp
pop    %ebp
ret    
nop    
nop    
nop    
nop    
nop    
nop    

08048ca0 <print_version>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
add    $0xfffffff4,%esp
mov    0x8(%ebp),%eax
push   %eax
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
push   $0x8049de0
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
push   $0x8049de2
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
push   $0x8049e00
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
push   $0x8049de0
call   8048a9c <printf@plt>
add    $0x10,%esp
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi

08048d00 <run_cmd>:
push   %ebp
mov    %esp,%ebp
sub    $0x48,%esp
movl   $0x1,0xffffffd4(%ebp)
lea    0xc(%ebp),%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x6,0xffffffd4(%ebp)
jg     8048d41 <run_cmd+0x41>
mov    0xffffffd4(%ebp),%eax
mov    %eax,%edx
lea    0x0(,%edx,4),%eax
lea    0xffffffdc(%ebp),%edx
add    %edx,%eax
addl   $0x4,0xfffffffc(%ebp)
incl   0xffffffd4(%ebp)
mov    0xfffffffc(%ebp),%edx
add    $0xfffffffc,%edx
mov    (%edx),%ecx
mov    %ecx,(%eax)
test   %ecx,%ecx
jne    8048d43 <run_cmd+0x43>
jmp    8048d41 <run_cmd+0x41>
jmp    8048d45 <run_cmd+0x45>
jmp    8048d13 <run_cmd+0x13>
movl   $0x0,0xfffffff8(%ebp)
add    $0xfffffff8,%esp
push   $0x2f
mov    0x8(%ebp),%eax
push   %eax
call   8048b1c <rindex@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xffffffdc(%ebp)
cmpl   $0x0,0xffffffdc(%ebp)
jne    8048d70 <run_cmd+0x70>
mov    0x8(%ebp),%eax
mov    %eax,0xffffffdc(%ebp)
jmp    8048d73 <run_cmd+0x73>
incl   0xffffffdc(%ebp)
call   804896c <fork@plt>
mov    %eax,%eax
mov    %eax,0xffffffd8(%ebp)
cmpl   $0x0,0xffffffd8(%ebp)
jge    8048da0 <run_cmd+0xa0>
add    $0xfffffff8,%esp
push   $0x8049e24
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8048e14 <run_cmd+0x114>
cmpl   $0x0,0xffffffd8(%ebp)
jle    8048df2 <run_cmd+0xf2>
add    $0xfffffffc,%esp
push   $0x0
lea    0xffffffd0(%ebp),%eax
push   %eax
mov    0xffffffd8(%ebp),%eax
push   %eax
call   8048a0c <waitpid@plt>
add    $0x10,%esp
mov    0xffffffd0(%ebp),%eax
mov    %eax,0xffffffcc(%ebp)
mov    0xffffffcc(%ebp),%eax
and    $0x7f,%eax
test   %eax,%eax
jne    8048de4 <run_cmd+0xe4>
mov    0xffffffd0(%ebp),%eax
mov    %eax,0xffffffc8(%ebp)
mov    0xffffffc8(%ebp),%eax
and    $0xff00,%eax
mov    %eax,%edx
sar    $0x8,%edx
test   %edx,%edx
jne    8048de4 <run_cmd+0xe4>
jmp    8048df0 <run_cmd+0xf0>
mov    $0x1,%eax
jmp    8048e14 <run_cmd+0x114>
nop    
lea    0x0(%esi),%esi
jmp    8048e10 <run_cmd+0x110>
add    $0xfffffff8,%esp
lea    0xffffffdc(%ebp),%eax
push   %eax
mov    0x8(%ebp),%eax
push   %eax
call   8048a4c <execvp@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8048e14 <run_cmd+0x114>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8048e14 <run_cmd+0x114>
mov    %ebp,%esp
pop    %ebp
ret    
nop    
lea    0x0(%esi),%esi

08048e20 <copy_file>:
push   %ebp
mov    %esp,%ebp
sub    $0xfc8,%esp
add    $0xfffffff8,%esp
push   $0x8049e31
mov    0x8(%ebp),%eax
push   %eax
call   8048b3c <fopen@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffff054(%ebp)
cmpl   $0x0,0xfffff054(%ebp)
jne    8048e72 <copy_file+0x52>
add    $0xfffffffc,%esp
mov    0x8(%ebp),%eax
push   %eax
push   $0x8049e40
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8048f70 <copy_file+0x150>
movl   $0x0,0xfffffffc(%ebp)
lea    0x0(%esi),%esi
add    $0xfffffff4,%esp
mov    0xfffff054(%ebp),%eax
push   %eax
call   804892c <fgetc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffff04c(%ebp)
cmpl   $0xffffffff,0xfffff04c(%ebp)
jne    8048ea5 <copy_file+0x85>
jmp    8048ec0 <copy_file+0xa0>
lea    0xfffff058(%ebp),%eax
mov    0xfffffffc(%ebp),%edx
mov    0xfffff04c(%ebp),%cl
mov    %cl,(%edx,%eax,1)
incl   0xfffffffc(%ebp)
jmp    8048e80 <copy_file+0x60>
lea    0x0(%esi),%esi
mov    0xfffffffc(%ebp),%eax
mov    %eax,0xfffffff8(%ebp)
add    $0xfffffff4,%esp
mov    0xfffff054(%ebp),%eax
push   %eax
call   8048abc <fclose@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049e60
mov    0xc(%ebp),%eax
push   %eax
call   8048b3c <fopen@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffff050(%ebp)
cmpl   $0x0,0xfffff050(%ebp)
jne    8048f20 <copy_file+0x100>
add    $0xfffffffc,%esp
mov    0xc(%ebp),%eax
push   %eax
push   $0x8049e80
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8048f70 <copy_file+0x150>
mov    %esi,%esi
movl   $0x0,0xfffffffc(%ebp)
mov    0xfffffffc(%ebp),%eax
cmp    0xfffffff8(%ebp),%eax
jb     8048f31 <copy_file+0x111>
jmp    8048f56 <copy_file+0x136>
add    $0xfffffff8,%esp
mov    0xfffff050(%ebp),%eax
push   %eax
lea    0xfffff058(%ebp),%eax
mov    0xfffffffc(%ebp),%edx
movsbl (%edx,%eax,1),%eax
push   %eax
call   8048a6c <fputc@plt>
add    $0x10,%esp
incl   0xfffffffc(%ebp)
jmp    8048f27 <copy_file+0x107>
add    $0xfffffff4,%esp
mov    0xfffff050(%ebp),%eax
push   %eax
call   8048abc <fclose@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8048f70 <copy_file+0x150>
lea    0x0(%esi),%esi
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi

08048f80 <dir_exists>:
push   %ebp
mov    %esp,%ebp
sub    $0x68,%esp
add    $0xfffffff8,%esp
lea    0xffffffa8(%ebp),%eax
push   %eax
mov    0x8(%ebp),%eax
push   %eax
call   8049d20 <__stat>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xffffffa4(%ebp)
cmpl   $0xffffffff,0xffffffa4(%ebp)
jne    8048fb8 <dir_exists+0x38>
call   80489bc <__errno_location@plt>
mov    %eax,%eax
mov    %eax,%edx
cmpl   $0x2,(%edx)
jne    8048fb8 <dir_exists+0x38>
xor    %eax,%eax
jmp    8048fe7 <dir_exists+0x67>
jmp    8048fe3 <dir_exists+0x63>
mov    0xffffffb8(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8048fd0 <dir_exists+0x50>
mov    $0x1,%eax
jmp    8048fe7 <dir_exists+0x67>
jmp    8048fe3 <dir_exists+0x63>
add    $0xfffffff4,%esp
mov    0x8(%ebp),%eax
push   %eax
call   804898c <unlink@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8048fe7 <dir_exists+0x67>
xor    %eax,%eax
jmp    8048fe7 <dir_exists+0x67>
mov    %ebp,%esp
pop    %ebp
ret    
nop    
lea    0x0(%esi),%esi

08048ff0 <get_submit_dir>:
push   %ebp
mov    %esp,%ebp
sub    $0x14,%esp
push   %ebx
add    $0xfffffff4,%esp
push   $0x8049ea5
call   804897c <getenv@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffff8(%ebp)
cmpl   $0x0,0xfffffff8(%ebp)
jne    8049019 <get_submit_dir+0x29>
movl   $0x8049eaa,0xfffffff8(%ebp)
add    $0xfffffff4,%esp
add    $0xfffffff4,%esp
push   $0x8049eb2
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%ebx
add    $0xfffffff4,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    0x1(%eax),%edx
lea    (%edx,%ebx,1),%eax
lea    0x1(%eax),%edx
push   %edx
call   80489cc <malloc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x0,0xfffffffc(%ebp)
jne    8049076 <get_submit_dir+0x86>
add    $0xfffffff8,%esp
push   $0x8049ec4
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    80490e3 <get_submit_dir+0xf3>
add    $0xfffffff8,%esp
push   $0x8049eb2
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049edf
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048f80 <dir_exists>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
jne    80490dc <get_submit_dir+0xec>
add    $0xfffffffc,%esp
push   $0x0
mov    0xfffffffc(%ebp),%eax
push   %eax
push   $0x8049ee1
call   8048d00 <run_cmd>
add    $0x10,%esp
mov    0xfffffffc(%ebp),%edx
mov    %edx,%eax
jmp    80490e3 <get_submit_dir+0xf3>
mov    0xffffffe8(%ebp),%ebx
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi

080490f0 <get_dst_name>:
push   %ebp
mov    %esp,%ebp
sub    $0x14,%esp
push   %ebx
call   8048ff0 <get_submit_dir>
mov    %eax,%eax
mov    %eax,0xfffffff8(%ebp)
cmpl   $0x0,0xfffffff8(%ebp)
jne    8049110 <get_dst_name+0x20>
xor    %eax,%eax
jmp    80491c0 <get_dst_name+0xd0>
mov    %esi,%esi
add    $0xfffffff4,%esp
add    $0xfffffff4,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%ebx
add    $0xfffffff4,%esp
mov    0x8(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    0x1(%eax),%edx
lea    (%edx,%ebx,1),%eax
lea    0x1(%eax),%edx
push   %edx
call   80489cc <malloc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x0,0xfffffffc(%ebp)
jne    8049170 <get_dst_name+0x80>
add    $0xfffffff8,%esp
push   $0x8049ec4
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    80491c0 <get_dst_name+0xd0>
lea    0x0(%esi),%esi
add    $0xfffffff8,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049edf
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
mov    0x8(%ebp),%eax
push   %eax
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
call   8048afc <free@plt>
add    $0x10,%esp
mov    0xfffffffc(%ebp),%edx
mov    %edx,%eax
jmp    80491c0 <get_dst_name+0xd0>
mov    0xffffffe8(%ebp),%ebx
mov    %ebp,%esp
pop    %ebp
ret    
mov    %esi,%esi
lea    0x0(%edi),%edi

080491d0 <get_logfile_name>:
push   %ebp
mov    %esp,%ebp
sub    $0x84,%esp
push   %ebx
call   8048aac <getuid@plt>
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
call   8048adc <getgid@plt>
mov    %eax,%eax
mov    %eax,0xfffffff8(%ebp)
add    $0xfffffff4,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
call   804899c <getpwuid@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffff4(%ebp)
cmpl   $0x0,0xfffffff4(%ebp)
jne    8049225 <get_logfile_name+0x55>
add    $0xfffffff8,%esp
push   $0x8049ee7
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
add    $0xfffffff4,%esp
add    $0xfffffff4,%esp
mov    0xfffffff4(%ebp),%eax
mov    (%eax),%edx
push   %edx
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%ebx
add    $0xfffffff4,%esp
push   $0x8049f01
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    0x7(%eax),%edx
lea    (%edx,%ebx,1),%eax
lea    0x1(%eax),%edx
push   %edx
call   80489cc <malloc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffff0(%ebp)
cmpl   $0x0,0xfffffff0(%ebp)
jne    8049287 <get_logfile_name+0xb7>
add    $0xfffffff8,%esp
push   $0x8049ec4
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
add    $0xfffffff4,%esp
add    $0xfffffff4,%esp
mov    0xfffffff4(%ebp),%eax
mov    (%eax),%edx
push   %edx
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    0x7(%eax),%edx
push   %edx
call   80489cc <malloc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xffffffec(%ebp)
cmpl   $0x0,0xffffffec(%ebp)
jne    80492d1 <get_logfile_name+0x101>
add    $0xfffffff8,%esp
push   $0x8049ec4
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
add    $0xfffffff8,%esp
push   $0x8049f0c
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
mov    0xfffffff4(%ebp),%eax
mov    (%eax),%edx
push   %edx
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
mov    0xfffffff0(%ebp),%eax
push   %eax
mov    0xffffffec(%ebp),%eax
push   %eax
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049edf
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049f01
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8048a8c <strcat@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x0
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8048b6c <realpath@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xffffffe8(%ebp)
cmpl   $0x0,0xffffffe8(%ebp)
jne    80493d8 <get_logfile_name+0x208>
add    $0xfffffff8,%esp
push   $0x180
mov    0xfffffff0(%ebp),%eax
push   %eax
call   80489ac <creat@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xffffff8c(%ebp)
cmpl   $0x0,0xffffff8c(%ebp)
jge    8049395 <get_logfile_name+0x1c5>
add    $0xfffffffc,%esp
mov    0xfffffff0(%ebp),%eax
push   %eax
push   $0x8049f20
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
add    $0xfffffffc,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
mov    0xfffffffc(%ebp),%eax
push   %eax
mov    0xffffff8c(%ebp),%eax
push   %eax
call   8048b5c <fchown@plt>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
jge    80493d3 <get_logfile_name+0x203>
add    $0xfffffffc,%esp
mov    0xfffffff0(%ebp),%eax
push   %eax
push   $0x8049f40
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
jmp    8049480 <get_logfile_name+0x2b0>
add    $0xfffffffc,%esp
add    $0xfffffff4,%esp
mov    0xffffffec(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
push   %eax
mov    0xffffffec(%ebp),%eax
push   %eax
mov    0xffffffe8(%ebp),%eax
push   %eax
call   8048a5c <strncmp@plt>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049421 <get_logfile_name+0x251>
add    $0xfffffffc,%esp
mov    0xffffffe8(%ebp),%eax
push   %eax
push   $0x8049f6c
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
add    $0xfffffff8,%esp
lea    0xffffff90(%ebp),%eax
push   %eax
mov    0xfffffff0(%ebp),%eax
push   %eax
call   8049d20 <__stat>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049454 <get_logfile_name+0x284>
add    $0xfffffff8,%esp
push   $0x8049f82
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
mov    0xffffffa8(%ebp),%eax
cmp    0xfffffffc(%ebp),%eax
je     8049480 <get_logfile_name+0x2b0>
add    $0xfffffffc,%esp
mov    0xfffffff0(%ebp),%eax
push   %eax
push   $0x8049f92
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049487 <get_logfile_name+0x2b7>
lea    0x0(%esi),%esi
mov    0xfffffff0(%ebp),%edx
mov    %edx,%eax
jmp    8049487 <get_logfile_name+0x2b7>
mov    0xffffff78(%ebp),%ebx
mov    %ebp,%esp
pop    %ebp
ret    
jmp    80494a0 <check_for_viruses>
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    

080494a0 <check_for_viruses>:
push   %ebp
mov    %esp,%ebp
sub    $0x448,%esp
add    $0xfffffff8,%esp
mov    0x8(%ebp),%eax
push   %eax
push   $0x8049fa9
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
push   $0x8049e31
mov    0x8(%ebp),%eax
push   %eax
call   8048b3c <fopen@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffbf8(%ebp)
cmpl   $0x0,0xfffffbf8(%ebp)
jne    8049506 <check_for_viruses+0x66>
add    $0xfffffffc,%esp
mov    0x8(%ebp),%eax
push   %eax
push   $0x8049e40
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8049634 <check_for_viruses+0x194>
cmpl   $0xffffffff,0xfffffbf4(%ebp)
jne    8049514 <check_for_viruses+0x74>
jmp    8049620 <check_for_viruses+0x180>
add    $0xfffffffc,%esp
push   $0x400
push   $0x0
lea    0xfffffc00(%ebp),%eax
push   %eax
call   8048b0c <memset@plt>
add    $0x10,%esp
lea    0xfffffc00(%ebp),%eax
mov    %eax,0xfffffbfc(%ebp)
movl   $0x0,0xfffffbf0(%ebp)
add    $0xfffffff4,%esp
mov    0xfffffbf8(%ebp),%eax
push   %eax
call   804892c <fgetc@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffbf4(%ebp)
cmpl   $0xffffffff,0xfffffbf4(%ebp)
je     8049574 <check_for_viruses+0xd4>
cmpl   $0x3fe,0xfffffbf0(%ebp)
jbe    8049576 <check_for_viruses+0xd6>
jmp    8049574 <check_for_viruses+0xd4>
jmp    8049592 <check_for_viruses+0xf2>
mov    0xfffffbfc(%ebp),%eax
mov    0xfffffbf4(%ebp),%dl
mov    %dl,(%eax)
incl   0xfffffbfc(%ebp)
incl   0xfffffbf0(%ebp)
jmp    8049543 <check_for_viruses+0xa3>
add    $0xfffffffc,%esp
push   $0x0
push   $0x8049fc5
lea    0xfffffbd0(%ebp),%eax
push   %eax
call   8048aec <regcomp@plt>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     80495d0 <check_for_viruses+0x130>
add    $0xfffffff8,%esp
push   $0x8049fe0
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8049634 <check_for_viruses+0x194>
mov    %esi,%esi
add    $0xfffffff4,%esp
push   $0x0
push   $0x0
push   $0x0
lea    0xfffffc00(%ebp),%eax
push   %eax
lea    0xfffffbd0(%ebp),%eax
push   %eax
call   804891c <regexec@plt>
add    $0x20,%esp
mov    %eax,%eax
mov    %eax,0xfffffbcc(%ebp)
cmpl   $0x0,0xfffffbcc(%ebp)
jne    8049617 <check_for_viruses+0x177>
add    $0xfffffff4,%esp
push   $0x804a020
call   8048a9c <printf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8049634 <check_for_viruses+0x194>
jmp    8049506 <check_for_viruses+0x66>
lea    0x0(%esi),%esi
add    $0xfffffff4,%esp
push   $0x804a05d
call   8048a9c <printf@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049634 <check_for_viruses+0x194>
mov    %ebp,%esp
pop    %ebp
ret    
nop    
lea    0x0(%esi),%esi

08049640 <log_message>:
push   %ebp
mov    %esp,%ebp
sub    $0x40,%esp
push   %edi
push   %esi
add    $0xfffffff4,%esp
push   $0x0
call   8048a1c <time@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffff8(%ebp)
add    $0xfffffff4,%esp
lea    0xfffffff8(%ebp),%eax
push   %eax
call   804894c <localtime@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    0xffffffcc(%ebp),%edi
mov    %eax,%esi
cld    
mov    $0xb,%ecx
rep movsl %ds:(%esi),%es:(%edi)
cmpl   $0x0,0x8(%ebp)
jne    8049685 <log_message+0x45>
movl   $0x804a073,0x8(%ebp)
add    $0xfffffff8,%esp
push   $0x804a077
mov    0xc(%ebp),%eax
push   %eax
call   8048b3c <fopen@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x0,0xfffffffc(%ebp)
jne    80496b0 <log_message+0x70>
mov    $0x1,%eax
jmp    8049720 <log_message+0xe0>
nop    
lea    0x0(%esi),%esi
mov    0xffffffcc(%ebp),%eax
push   %eax
mov    0xffffffd0(%ebp),%eax
push   %eax
mov    0xffffffd4(%ebp),%eax
push   %eax
mov    0xffffffd8(%ebp),%eax
push   %eax
mov    0xffffffdc(%ebp),%eax
inc    %eax
push   %eax
mov    0xffffffe0(%ebp),%eax
add    $0x76c,%eax
push   %eax
push   $0x804a079
mov    0xfffffffc(%ebp),%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x20,%esp
add    $0xfffffff8,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
mov    0x8(%ebp),%eax
push   %eax
call   8048a2c <fputs@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
push   $0x8049de0
call   8048a2c <fputs@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048abc <fclose@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049720 <log_message+0xe0>
lea    0x0(%esi),%esi
lea    0xffffffb8(%ebp),%esp
pop    %esi
pop    %edi
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi

08049730 <parse_args>:
push   %ebp
mov    %esp,%ebp
sub    $0x6c,%esp
push   %edi
push   %esi
push   %ebx
mov    0x8(%ebp),%ebx
lea    0xffffffa0(%ebp),%eax
lea    0xffffffa0(%ebp),%edi
mov    $0x804a0ac,%esi
cld    
mov    $0x10,%ecx
rep movsl %ds:(%esi),%es:(%edi)
add    $0xfffffffc,%esp
push   $0x18
push   $0x0
lea    0xffffffe0(%ebp),%eax
push   %eax
call   8048b0c <memset@plt>
add    $0x10,%esp
movl   $0x0,0xfffffffc(%ebp)
movl   $0x0,0xfffffff8(%ebp)
jmp    8049774 <parse_args+0x44>
jmp    80497f0 <parse_args+0xc0>
add    $0xfffffff4,%esp
push   $0x0
lea    0xffffffa0(%ebp),%eax
push   %eax
push   $0x804a0ec
mov    0x10(%ebp),%eax
push   %eax
mov    0xc(%ebp),%eax
push   %eax
call   8048acc <getopt_long@plt>
add    $0x20,%esp
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0xffffffff,0xfffffffc(%ebp)
jne    80497a0 <parse_args+0x70>
jmp    80497f0 <parse_args+0xc0>
nop    
mov    0xfffffffc(%ebp),%eax
cmp    $0x73,%eax
je     80497b0 <parse_args+0x80>
cmp    $0x76,%eax
je     80497c0 <parse_args+0x90>
jmp    80497d0 <parse_args+0xa0>
nop    
movl   $0x1,0xfffffff8(%ebp)
movl   $0x1,0xffffffe0(%ebp)
jmp    80497e0 <parse_args+0xb0>
movl   $0x1,0xfffffff8(%ebp)
movl   $0x1,0xffffffe4(%ebp)
jmp    80497e0 <parse_args+0xb0>
movl   $0x1,0xfffffff8(%ebp)
movl   $0x1,0xffffffe8(%ebp)
jmp    80497e0 <parse_args+0xb0>
cmpl   $0x0,0xffffffe8(%ebp)
je     80497e8 <parse_args+0xb8>
jmp    80497f0 <parse_args+0xc0>
jmp    8049770 <parse_args+0x40>
lea    0x0(%esi),%esi
cmpl   $0x0,0xfffffff8(%ebp)
jne    8049845 <parse_args+0x115>
mov    0xc(%ebp),%eax
mov    0x804b5d8,%edx
sub    %edx,%eax
test   %eax,%eax
jle    8049845 <parse_args+0x115>
mov    0x804b5d8,%eax
lea    0x0(,%eax,4),%edx
mov    0x10(%ebp),%eax
mov    (%eax,%edx,1),%edx
mov    %edx,0xfffffff0(%ebp)
mov    0xc(%ebp),%eax
mov    0x804b5d8,%edx
sub    %edx,%eax
cmp    $0x1,%eax
jle    8049843 <parse_args+0x113>
mov    0x804b5d8,%eax
lea    0x0(,%eax,4),%edx
mov    %edx,%eax
add    0x10(%ebp),%eax
lea    0x4(%eax),%edx
mov    (%edx),%eax
mov    %eax,0xfffffff4(%ebp)
jmp    8049852 <parse_args+0x122>
cmpl   $0x1,0xc(%ebp)
jg     8049852 <parse_args+0x122>
movl   $0x1,0xffffffe8(%ebp)
mov    %ebx,%edi
lea    0xffffffe0(%ebp),%esi
cld    
mov    $0x6,%ecx
rep movsl %ds:(%esi),%es:(%edi)
jmp    8049861 <parse_args+0x131>
mov    %ebx,%eax
lea    0xffffff88(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %ebp,%esp
pop    %ebp
ret    $0x4
nop    

08049870 <print_usage>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
add    $0xfffffff8,%esp
mov    0x8(%ebp),%eax
push   %eax
push   $0x804a100
call   8048a9c <printf@plt>
add    $0x10,%esp
mov    %ebp,%esp
pop    %ebp
ret    
mov    %esi,%esi

08049890 <show_confirmation>:
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
call   8048ff0 <get_submit_dir>
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x0,0xfffffffc(%ebp)
je     80498d5 <show_confirmation+0x45>
add    $0xfffffff4,%esp
push   $0x0
push   $0x804a194
push   $0x804a196
mov    0xfffffffc(%ebp),%eax
push   %eax
push   $0x804a1a0
call   8048d00 <run_cmd>
add    $0x20,%esp
add    $0xfffffff4,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048afc <free@plt>
add    $0x10,%esp
xor    %eax,%eax
jmp    80498e0 <show_confirmation+0x50>
lea    0x0(%esi),%esi
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi

080498f0 <check_forbidden>:
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movb   $0x2f,0xffffffff(%ebp)
add    $0xfffffff8,%esp
movsbl 0xffffffff(%ebp),%eax
push   %eax
mov    0x8(%ebp),%eax
push   %eax
call   80489dc <index@plt>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049931 <check_forbidden+0x41>
add    $0xfffffff8,%esp
push   $0x804a1ae
mov    0x804b5d4,%eax
push   %eax
call   804895c <fprintf@plt>
add    $0x10,%esp
mov    $0x1,%eax
jmp    8049935 <check_forbidden+0x45>
xor    %eax,%eax
jmp    8049935 <check_forbidden+0x45>
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi

08049940 <main>:
push   %ebp
mov    %esp,%ebp
sub    $0x200,%esp
push   %edi
push   %ebx
movl   $0x0,0xfffffff4(%ebp)
lea    0xffffff54(%ebp),%edi
xor    %eax,%eax
cld    
mov    $0x28,%ecx
rep stos %eax,%es:(%edi)
mov    0x804a1c8,%eax
mov    0x804a1cc,%edx
mov    %eax,0xffffff34(%ebp)
mov    %edx,0xffffff38(%ebp)
lea    0xfffffe08(%ebp),%edi
xor    %eax,%eax
cld    
mov    $0x4b,%ecx
rep stos %eax,%es:(%edi)
add    $0xfffffff8,%esp
push   $0x804a1cc
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048b8c <strcpy@plt>
add    $0x10,%esp
lea    0xffffff3c(%ebp),%eax
add    $0xfffffffc,%esp
mov    0xc(%ebp),%edx
push   %edx
mov    0x8(%ebp),%edx
push   %edx
push   %eax
call   8049730 <parse_args>
add    $0xc,%esp
cmpl   $0x0,0xffffff44(%ebp)
je     80499e0 <main+0xa0>
add    $0xfffffff4,%esp
mov    0xc(%ebp),%eax
mov    (%eax),%edx
push   %edx
call   8049870 <print_usage>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049c60 <main+0x320>
nop    
lea    0x0(%esi),%esi
cmpl   $0x0,0xffffff40(%ebp)
je     8049a23 <main+0xe3>
mov    0xc(%ebp),%eax
mov    (%eax),%edx
push   %edx
lea    0xffffff34(%ebp),%eax
push   %eax
push   $0x804a1e0
lea    0xfffffe08(%ebp),%eax
push   %eax
call   8048b4c <sprintf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
lea    0xfffffe08(%ebp),%eax
push   %eax
call   8048ca0 <print_version>
add    $0x10,%esp
xor    %eax,%eax
jmp    8049c60 <main+0x320>
cmpl   $0x0,0xffffff3c(%ebp)
je     8049a48 <main+0x108>
add    $0xfffffff4,%esp
push   $0x804a207
call   8048a9c <printf@plt>
add    $0x10,%esp
call   8049890 <show_confirmation>
xor    %eax,%eax
jmp    8049c60 <main+0x320>
call   80491d0 <get_logfile_name>
mov    %eax,%eax
mov    %eax,0xfffffff8(%ebp)
cmpl   $0x0,0xfffffff8(%ebp)
jne    8049a62 <main+0x122>
mov    $0x1,%eax
jmp    8049c60 <main+0x320>
add    $0xfffffff4,%esp
mov    0xffffff4c(%ebp),%eax
push   %eax
call   80490f0 <get_dst_name>
add    $0x10,%esp
mov    %eax,%eax
mov    %eax,0xfffffffc(%ebp)
cmpl   $0x0,0xfffffffc(%ebp)
jne    8049a90 <main+0x150>
mov    $0x1,%eax
jmp    8049c60 <main+0x320>
lea    0x0(%esi),%esi
cmpl   $0x0,0xfffffff4(%ebp)
jne    8049b3f <main+0x1ff>
add    $0xfffffff4,%esp
mov    0xffffff4c(%ebp),%eax
push   %eax
call   80498f0 <check_forbidden>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049b3f <main+0x1ff>
movl   $0x1,0xfffffff4(%ebp)
add    $0xfffffff8,%esp
push   $0x804a219
lea    0xffffff54(%ebp),%ebx
add    $0xfffffff4,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    (%eax,%ebx,1),%edx
push   %edx
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffffc,%esp
add    $0xfffffff4,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
mov    $0xa0,%edx
mov    %edx,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
push   %eax
mov    0xffffff4c(%ebp),%eax
push   %eax
lea    0xffffff54(%ebp),%ebx
add    $0xfffffff4,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    (%eax,%ebx,1),%edx
push   %edx
call   8048b2c <strncpy@plt>
add    $0x10,%esp
movb   $0x0,0xfffffff3(%ebp)
cmpl   $0x0,0xfffffff4(%ebp)
jne    8049b92 <main+0x252>
add    $0xfffffff4,%esp
mov    0xffffff4c(%ebp),%eax
push   %eax
call   80494a0 <check_for_viruses>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049b92 <main+0x252>
movl   $0x1,0xfffffff4(%ebp)
add    $0xfffffff8,%esp
push   $0x804a22a
lea    0xffffff54(%ebp),%ebx
add    $0xfffffff4,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    (%eax,%ebx,1),%edx
push   %edx
call   8048b8c <strcpy@plt>
add    $0x10,%esp
cmpl   $0x0,0xfffffff4(%ebp)
jne    8049c11 <main+0x2d1>
add    $0xfffffff8,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
mov    0xffffff4c(%ebp),%eax
push   %eax
call   8048e20 <copy_file>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049bc0 <main+0x280>
mov    $0x1,%eax
jmp    8049c60 <main+0x320>
mov    %esi,%esi
add    $0xfffffff8,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
mov    0xffffff50(%ebp),%eax
push   %eax
call   8049640 <log_message>
add    $0x10,%esp
mov    %eax,%eax
test   %eax,%eax
je     8049be3 <main+0x2a3>
mov    $0x1,%eax
jmp    8049c60 <main+0x320>
add    $0xfffffff8,%esp
push   $0x804a23a
lea    0xffffff54(%ebp),%ebx
add    $0xfffffff4,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
call   8048a3c <strlen@plt>
add    $0x10,%esp
mov    %eax,%eax
lea    (%eax,%ebx,1),%edx
push   %edx
call   8048b8c <strcpy@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
mov    0xfffffff8(%ebp),%eax
push   %eax
call   8048afc <free@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
mov    0xfffffffc(%ebp),%eax
push   %eax
call   8048afc <free@plt>
add    $0x10,%esp
add    $0xfffffff8,%esp
lea    0xffffff54(%ebp),%eax
push   %eax
push   $0x804a243
call   8048a9c <printf@plt>
add    $0x10,%esp
add    $0xfffffff4,%esp
push   $0x804a207
call   8048a9c <printf@plt>
add    $0x10,%esp
call   8049890 <show_confirmation>
xor    %eax,%eax
jmp    8049c60 <main+0x320>
nop    
lea    0xfffffdf8(%ebp),%esp
pop    %ebx
pop    %edi
mov    %ebp,%esp
pop    %ebp
ret    
nop    
nop    
nop    
nop    

08049c70 <__libc_csu_fini>:
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   8049d13 <__i686.get_pc_thunk.bx>
add    $0x189d,%ebx
sub    $0xc,%esp
lea    0xffffff24(%ebx),%eax
lea    0xffffff24(%ebx),%edi
sub    %edi,%eax
sar    $0x2,%eax
lea    0xffffffff(%eax),%esi
cmp    $0xffffffff,%esi
je     8049ca9 <__libc_csu_fini+0x39>
lea    0x0(%esi),%esi
call   *(%edi,%esi,4)
dec    %esi
cmp    $0xffffffff,%esi
jne    8049ca0 <__libc_csu_fini+0x30>
lea    0x0(%esi),%esi
call   8049d9c <_fini>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret    
lea    0x0(%esi),%esi

08049cc0 <__libc_csu_init>:
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   8049d13 <__i686.get_pc_thunk.bx>
add    $0x184d,%ebx
sub    $0xc,%esp
call   80488f4 <_init>
lea    0xffffff24(%ebx),%eax
lea    0xffffff24(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,0xfffffff0(%ebp)
je     8049d0b <__libc_csu_init+0x4b>
xor    %edi,%edi
mov    %edx,%esi
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
inc    %edi
call   *(%esi)
add    $0x4,%esi
cmp    %edi,0xfffffff0(%ebp)
jne    8049d00 <__libc_csu_init+0x40>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret    

08049d13 <__i686.get_pc_thunk.bx>:
mov    (%esp),%ebx
ret    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    

08049d20 <__stat>:
push   %ebp
mov    %esp,%ebp
push   %ebx
sub    $0xc,%esp
mov    0xc(%ebp),%eax
call   8049d13 <__i686.get_pc_thunk.bx>
add    $0x17e9,%ebx
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x8(%ebp),%eax
mov    %eax,0x4(%esp)
call   80489fc <__xstat@plt>
add    $0xc,%esp
pop    %ebx
pop    %ebp
ret    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    
nop    

08049d60 <__do_global_ctors_aux>:
push   %ebp
mov    %esp,%ebp
sub    $0x14,%esp
push   %ebx
mov    $0x804b43c,%ebx
cmpl   $0xffffffff,0x804b43c
je     8049d81 <__do_global_ctors_aux+0x21>
mov    (%ebx),%eax
call   *%eax
add    $0xfffffffc,%ebx
cmpl   $0xffffffff,(%ebx)
jne    8049d75 <__do_global_ctors_aux+0x15>
pop    %ebx
mov    %ebp,%esp
pop    %ebp
ret    
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi

08049d90 <init_dummy>:
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
mov    %ebp,%esp
pop    %ebp
ret    
nop    
nop    
Disassembly of section .fini:

08049d9c <_fini>:
push   %ebp
mov    %esp,%ebp
push   %ebx
sub    $0x4,%esp
call   8049da8 <_fini+0xc>
pop    %ebx
add    $0x1770,%ebx
call   8048bf0 <__do_global_dtors_aux>
pop    %ecx
pop    %ebx
leave  
ret    
